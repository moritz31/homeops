apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  namespace: monitoring
  labels:
    dashboards: "grafana"
spec:
  deployment:
    spec:
      replicas: 1
      template:
        spec:
          containers:
            - name: grafana
              image: grafana/grafana:10.0.0
              securityContext:
                allowPrivilegeEscalation: true
                readOnlyRootFilesystem: false
              envFrom:
                - secretRef:
                    name: grafana-secrets
                - secretRef:
                    name: grafana-env
              resources:
                limits:
                  memory: 200Mi
                requests:
                  cpu: 50m
                  memory: 100Mi
  ingress:
    metadata:
      annotations: 
        external-dns.alpha.kubernetes.io/hostname: grafana.kirstein.me
        external-dns.alpha.kubernetes.io/target: home.kirstein.me
    spec:
      ingressClassName: external-ingress
      rules:
        - host: grafana.kirstein.me
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
  config:
    alerting:
      enabled: "false"
    unified_alerting:
      enabled: "false"
    auth: 
      signout_redirect_url: https://auth.kirstein.me/application/o/grafana/end-session/
      oauth_auto_login: "true"
    auth.generic_oauth:
      name: Authelia
      enabled: "true"
      scopes: openid profile email groups
      empty_scopes: "false"
      auth_url: https://auth.kirstein.me/api/oidc/authorization
      token_url: https://auth.kirstein.me/api/oidc/token
      api_url: https://auth.kirstein.me/api/oidc/userinfo
      login_attribute_path: preferred_username
      groups_attribute_path: groups
      name_attribute_path: name
      use_pkce: "true"
      role_attribute_path: contains(groups[*], 'grafana_admin') && 'GrafanaAdmin' || contains(groups[*], 'grafana_editor') && 'Editor' || 'Viewer'
    log:
      mode: "console"
      level: "error"
    log.frontend:
      enabled: "true"
    server:
      domain: grafana.kirstein.me
      root_url: "https://%(domain)s"